diff --git a/linux/drivers/media/common/saa7231/saa7231_dmabuf.c b/linux/drivers/media/common/saa7231/saa7231_dmabuf.c
index 5a17bab..df725da 100644
--- a/linux/drivers/media/common/saa7231/saa7231_dmabuf.c
+++ b/linux/drivers/media/common/saa7231/saa7231_dmabuf.c
@@ -21,9 +21,6 @@
 #include <linux/kernel.h>
 #include <linux/pci.h>
 #include <linux/scatterlist.h>
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(4, 2, 0)
-#include <linux/vmalloc.h>
-#endif
 #include <asm/page.h>
 #include <asm/pgtable.h>
 
@@ -35,6 +32,8 @@
 #include "saa7231_priv.h"
 #include "saa7231_dmabuf.h"
 
+#include <linux/vmalloc.h>
+
 
 static int saa7231_allocate_ptable(struct saa7231_dmabuf *dmabuf)
 {
diff --git a/linux/drivers/media/common/saa7231/saa7231_drv.c b/linux/drivers/media/common/saa7231/saa7231_drv.c
index fc37299..fd34163 100644
--- a/linux/drivers/media/common/saa7231/saa7231_drv.c
+++ b/linux/drivers/media/common/saa7231/saa7231_drv.c
@@ -81,11 +81,14 @@
 #include "s5h1411.h"
 #include "tda18272.h"
 #include "cxd2820r.h"
+#include "si2168.h"
 //#include "cxd2834.h"
-#include "cxd2850.h"
-#include "a8290.h"
-#include "cxd2817.h"
-#include "cxd2861.h"
+//#include "cxd2850.h"
+//#include "a8290.h"
+//#include "cxd2817.h"
+//#include "cxd2861.h"
+
+//#include "cxd2843.h"
 
 static unsigned int verbose;
 static unsigned int int_type;
@@ -97,7 +100,7 @@ MODULE_PARM_DESC(verbose, "verbose startup messages, default is 1 (yes)");
 MODULE_PARM_DESC(int_type, "force Interrupt Handler type: 0=INT-A, 1=MSI, 2=MSI-X. default INT-A mode");
 
 #define DRIVER_NAME				"SAA7231"
-#define DRIVER_VER				"0.0.91"
+#define DRIVER_VER				"0.0.93"
 #define MODULE_DBG				(((saa7231)->verbose == SAA7231_DEBUG) ? 1 : 0)
 
 extern void saa7231_dump_write(struct saa7231_dev *saa7231);
@@ -302,7 +305,7 @@ static void saa7231_pci_remove(struct pci_dev *pdev)
 	num -= 1;
 }
 
-
+/*
 static struct tda10048_config bgt3575_tda10048_config = {
 	.demod_address    = 0x10 >> 1,
 	.output_mode      = TDA10048_SERIAL_OUTPUT,
@@ -390,7 +393,7 @@ static struct tda18271_config bgt3576_tda18271_config = {
 	.std_map	= &bgt3576_tda18271_atsc,
 	.gate		= TDA18271_GATE_DIGITAL,
 };
-
+*/
 static struct tda10048_config bgt3585_tda10048_config[] = {
 	{
 		.demod_address    = 0x10 >> 1,
@@ -412,12 +415,12 @@ static struct tda10048_config bgt3585_tda10048_config[] = {
 		.clk_freq_khz     = TDA10048_CLK_16000,
 	}
 };
-
+/*
 static struct tda18271_config bgt3585_tda18271_config = {
 	.std_map	= &bgt3585_tda18271_dvbt,
 	.gate		= TDA18271_GATE_DIGITAL,
 };
-
+*/
 static struct stv090x_config bgt3595_stv090x_config = {
 	.device			= STV0900,
 	.demod_mode		= STV090x_DUAL,
@@ -445,11 +448,11 @@ static u8 bgt3595_lnbh24_config[] = {
 	0x12 >> 1,
 	0x14 >> 1,
 };
-
+/*
 static struct tda18271_config purus_mpcie_tda18271_config = {
 	.gate		= TDA18271_GATE_DIGITAL,
 };
-
+*/
 static struct s5h1411_config purus_mpcie_s5h1411_config = {
 	.output_mode	= S5H1411_SERIAL_OUTPUT,
 	.gpio		= S5H1411_GPIO_OFF,
@@ -459,7 +462,7 @@ static struct s5h1411_config purus_mpcie_s5h1411_config = {
 	.status_mode	= S5H1411_DEMODLOCKING,
 	.mpeg_timing	= S5H1411_MPEGTIMING_CONTINOUS_NONINVERTING_CLOCK,
 };
-
+/*
 static struct tda18272_config bgt3620_tda18272_config[] = {
 	{
 		.addr		= (0xc0 >> 1),
@@ -504,6 +507,21 @@ static struct cxd2861_cfg bgt3636_cxd2861_config = {
 	.f_xtal		= 41,
 };
 
+static struct cxd2843_cfg bgt3602_cxd2843_cfg = {
+    .adr		 = (0xd8 >> 1),
+    .ts_clock 	= 1,
+	.parallel 	= 0,
+};
+*/
+
+static struct tda18272_config behold_t8_tda18272_config[] = {
+	{
+		.addr		= (0xc6 >> 1),
+		.mode		= TDA18272_SLAVE,
+	}
+};
+
+
 #define NXP				"NXP Semiconductor"
 #define PURUS_PCIe_REF			0x0001
 #define PURUS_PCI_REF			0x0002
@@ -527,6 +545,17 @@ static struct cxd2861_cfg bgt3636_cxd2861_config = {
 #define BLACKGOLD_BGT3695		0x3695
 #define BLACKGOLD_BGT3696		0x3696
 #define BLACKGOLD_BGT3636		0x3636
+#define BLACKGOLD_BGT3602		0x3602
+
+
+#define HAUPPAUGE			"Hauppauge computer works Inc."
+#define HAUPPAUGE_DEVICE		0x0070
+#define HAUPPAUGE_HVR1280		0xc812
+
+#define BEHOLD				"Beholder International Ltd."
+#define BEHOLD_DEVICE			0x5ace
+#define BEHOLD_T8			0x8201
+
 
 #define SUBVENDOR_ALL			0x0000
 #define SUBDEVICE_ALL			0x0000
@@ -556,6 +585,9 @@ static struct cxd2861_cfg bgt3636_cxd2861_config = {
 #define BGT3695			       15
 #define BGT3696			       16
 #define BGT3636			       17
+#define BGT3602				18
+#define HVR1280				19
+#define BEHOLDT8			20
 
 static struct card_desc saa7231_desc[] = {
 	MAKE_DESC(NXP,		"Purus PCIe",	"DVB-S + DVB-T + Analog Ref. design"),
@@ -577,6 +609,9 @@ static struct card_desc saa7231_desc[] = {
 	MAKE_DESC(BLACKGOLD,	"BGT3695",	"Dual DVB-T + Analog"),
 	MAKE_DESC(BLACKGOLD,	"BGT3696",	"Dual ATSC + Analog"),
 	MAKE_DESC(BLACKGOLD,	"BGT3636",	"DVB-S/S2 + DVB-T/T2/C + Analog"),
+	MAKE_DESC(BLACKGOLD,	"BGT3602",	"DVB-T/T2/C + Analog"),
+	MAKE_DESC(HAUPPAUGE,	"HVR1280",	"DTMB + Analog"),
+	MAKE_DESC(BEHOLD,	"BEHOLDT8",	"DVB-T/T2/C + Analog"),
 	{ }
 };
 
@@ -592,7 +627,7 @@ static int saa7231_frontend_enable(struct saa7231_dev *saa7231)
 	switch (subsystem_info) {
 	case SUBSYS_INFO(NXP_REFERENCE_BOARD, PURUS_PCIe_REF):
 		break;
-	case SUBSYS_INFO(NXP_REFERENCE_BOARD, PURUS_mPCIe_REF):
+/*	case SUBSYS_INFO(NXP_REFERENCE_BOARD, PURUS_mPCIe_REF):
 		GPIO_SET_OUT(GPIO_3 | GPIO_4 | GPIO_5);
 		if (saa7231_gpio_set(saa7231, GPIO_3, 0) < 0)
 			ret = -EIO;
@@ -602,12 +637,12 @@ static int saa7231_frontend_enable(struct saa7231_dev *saa7231)
 		if (saa7231_gpio_reset(saa7231, GPIO_4, 10) < 0)
 			ret = -EIO;
 		break;
-	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3595):
+*/	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3595):
 		GPIO_SET_OUT(GPIO_1);
 		if (saa7231_gpio_reset(saa7231, GPIO_0, 50) < 0)
 			ret = -EIO;
 		break;
-	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3585):
+/*	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3585):
 		GPIO_SET_OUT(GPIO_1);
 		if (saa7231_gpio_reset(saa7231, GPIO_0, 50) < 0)
 			ret = -EIO;
@@ -678,6 +713,21 @@ static int saa7231_frontend_enable(struct saa7231_dev *saa7231)
 		if (saa7231_gpio_reset(saa7231, GPIO_2, 50) < 0)
 			ret = -EIO;
 		break;
+	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3602):
+		GPIO_SET_OUT(GPIO_1);
+		if (saa7231_gpio_reset(saa7231, GPIO_1, 50) < 0)
+			ret = -EIO;
+		break;
+*/	case SUBSYS_INFO(HAUPPAUGE_DEVICE, HAUPPAUGE_HVR1280):
+		GPIO_SET_OUT(GPIO_1);
+		if (saa7231_gpio_reset(saa7231, GPIO_1, 50) < 0)
+			ret = -EIO;
+		break;
+	case SUBSYS_INFO(BEHOLD_DEVICE, BEHOLD_T8):
+		GPIO_SET_OUT(GPIO_0 | GPIO_2);
+		if (saa7231_gpio_reset(saa7231, GPIO_2, 50) < 0)
+			ret = -EIO;
+		break;
 	}
 	return ret;
 }
@@ -702,7 +752,7 @@ static int saa7231_frontend_attach(struct saa7231_dvb *dvb, int frontend)
 		saa7231->pdev->subsystem_device);
 
 	switch (subsystem_info) {
-	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3636):
+/*	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3636):
 		dprintk(SAA7231_ERROR, 1, "BGT3636 Found .. !");
 		if (frontend == 1) {
 			dvb->fe = dvb_attach(cxd2850_attach,
@@ -880,7 +930,39 @@ static int saa7231_frontend_attach(struct saa7231_dvb *dvb, int frontend)
 				   &bgt3620_tda18272_config[frontend]);
 		}
 		ret = 0;
+		break;   old detection  */
+/*	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3600):
+		dprintk(SAA7231_ERROR, 1, "BGT3600 Found .. !");
+		dvb->fe = dvb_attach(cxd2820r_attach,
+				     &bgt3620_cxd2820r_config,
+				     &saa7231->i2c[1 + frontend].i2c_adapter,
+				     NULL);
+
+		if (!dvb->fe) {
+				dprintk(SAA7231_ERROR, 1, "Frontend:%d attach failed for cxd2820r", frontend);
+				dprintk(SAA7231_ERROR, 1, "BGT3602 Found with 3600 id !");
+				dvb->fe = dvb_attach(cxd2843_attach,
+                            &bgt3602_cxd2843_cfg,
+                            &saa7231->i2c[1 + frontend].i2c_adapter);
+          		if(!dvb->fe) {
+				dprintk(SAA7231_ERROR, 1, "Frontend:%d attach failed", frontend);
+				ret = -ENODEV;
+				goto exit; }
+			else {
+				dvb_attach(tda18272_attach,
+				dvb->fe,
+				&saa7231->i2c[1 + frontend].i2c_adapter,
+				&bgt3620_tda18272_config[frontend]);
+		}} 
+		else {
+			dvb_attach(tda18272_attach,
+				   dvb->fe,
+				   &saa7231->i2c[1 + frontend].i2c_adapter,
+				   &bgt3620_tda18272_config[frontend]);
+		}
+		ret = 0;
 		break;
+*/
 	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3595):
 		dvb->fe = dvb_attach(stv090x_attach,
 				     &bgt3595_stv090x_config,
@@ -909,7 +991,7 @@ static int saa7231_frontend_attach(struct saa7231_dvb *dvb, int frontend)
 			   bgt3595_lnbh24_config[frontend]);
 		ret = 0;
 		break;
-	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3585):
+/*	case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3585):
 		i2c = &saa7231->i2c[frontend + 1];
 		dvb->fe = dvb_attach(tda10048_attach,
 				     &bgt3585_tda10048_config[frontend],
@@ -1040,9 +1122,26 @@ static int saa7231_frontend_attach(struct saa7231_dvb *dvb, int frontend)
 		}
 		ret = 0;
 		break;
-	case SUBSYS_INFO(NXP_REFERENCE_BOARD, PURUS_PCIe_REF):
+        case SUBSYS_INFO(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3602):
+                dvb->fe = dvb_attach(cxd2843_attach,
+                                     &bgt3602_cxd2843_cfg,
+                                     &saa7231->i2c[1 + frontend].i2c_adapter);
+
+                if (!dvb->fe) {
+                        dprintk(SAA7231_ERROR, 1, "Frontend:%d attach failed", frontend);
+                        ret = -ENODEV;
+                        goto exit;
+                } else {
+                        dvb_attach(tda18272_attach,
+                                   dvb->fe,
+                                   &saa7231->i2c[1 + frontend].i2c_adapter,
+                                   &bgt3620_tda18272_config[frontend]);
+                }
+                ret = 0;
+                break;
+*/	case SUBSYS_INFO(NXP_REFERENCE_BOARD, PURUS_PCIe_REF):
 		break;
-	case SUBSYS_INFO(NXP_REFERENCE_BOARD, PURUS_mPCIe_REF):
+/*	case SUBSYS_INFO(NXP_REFERENCE_BOARD, PURUS_mPCIe_REF):
 		dvb->fe = dvb_attach(s5h1411_attach,
 				     &purus_mpcie_s5h1411_config,
 				     &i2c_0->i2c_adapter);
@@ -1061,11 +1160,80 @@ static int saa7231_frontend_attach(struct saa7231_dvb *dvb, int frontend)
 
 		ret = 0;
 		break;
+*/        case SUBSYS_INFO(HAUPPAUGE_DEVICE, HAUPPAUGE_HVR1280):
+//                dvb->fe = dvb_attach(cxd2843_attach,
+//                                     &bgt3602_cxd2843_cfg,
+//                                     &saa7231->i2c[1 + frontend].i2c_adapter);
+//
+//                if (!dvb->fe) {
+//                        dprintk(SAA7231_ERROR, 1, "Frontend:%d attach failed", frontend);
+//                        ret = -ENODEV;
+//                        goto exit;
+//                } else {
+//                        dvb_attach(tda18272_attach,
+//                                   dvb->fe,
+//                                   &saa7231->i2c[1 + frontend].i2c_adapter,
+//                                   &bgt3620_tda18272_config[frontend]);
+//                }
+//                ret = 0;
+                break;
+        case SUBSYS_INFO(BEHOLD_DEVICE, BEHOLD_T8):
+	{
+		struct i2c_adapter *adapter;
+		struct i2c_client *client;
+		struct i2c_board_info info;
+		struct si2168_config si2168_config;
+dprintk(SAA7231_DEBUG, 1, "Frontend: Behold Device");
+		memset(&si2168_config, 0, sizeof(si2168_config));
+		si2168_config.i2c_adapter = &adapter;
+		si2168_config.fe = &dvb->fe;
+		si2168_config.ts_mode = SI2168_TS_SERIAL;
+		si2168_config.clock = 16000000;
+		si2168_config.clock_mode = 1;
+		si2168_config.gpio.gpio0 = GP_DISABLE;
+		si2168_config.mp_pin = 1;
+		memset(&info, 0, sizeof(struct i2c_board_info));
+		strlcpy(info.type, "si2168", I2C_NAME_SIZE);
+		info.addr = 0x67;
+		info.platform_data = &si2168_config;
+		request_module(info.type);
+
+		client = i2c_new_device(&saa7231->i2c[1].i2c_adapter, &info);
+		if (client == NULL || client->dev.driver == NULL) {
+                        dprintk(SAA7231_ERROR, 1, "Frontend:%d 1attach failed", frontend);
+                        ret = -ENODEV;
+                        goto exit;
+		}
+
+		if (!try_module_get(client->dev.driver->owner)) {
+			i2c_unregister_device(client);
+                        dprintk(SAA7231_ERROR, 1, "Frontend:%d 2attach failed", frontend);
+                        ret = -ENODEV;
+                        goto exit;
+		}
+                if (!dvb->fe) {
+                        dprintk(SAA7231_ERROR, 1, "Frontend:%d 3attach failed", frontend);
+                        ret = -ENODEV;
+                        goto exit;
+                } else {
+                        dvb_attach(tda18272_attach,
+                                   dvb->fe,
+                                   &saa7231->i2c[1].i2c_adapter,
+                                   &behold_t8_tda18272_config[frontend]);
+                }
+                ret = 0;
+                break;
+        }
+        default:
+dprintk(SAA7231_DEBUG, 1, "Frontend: Unknown Device! %x %x %x %x",
+BEHOLD_DEVICE, BEHOLDT8,
+SUBSYS_INFO(BEHOLD_DEVICE, BEHOLDT8), subsystem_info);
+		break;
 	}
 exit:
 	return ret;
 }
-
+/*
 static struct saa7231_config purus_blackgold_bgt3636 = {
 	.desc			= DEVICE_DESC(BGT3636),
 	.xtal			= 54,
@@ -1106,6 +1274,9 @@ static struct saa7231_config purus_blackgold_bgt3630 = {
 
 static struct saa7231_config purus_blackgold_bgt3600 = {
 	.desc			= DEVICE_DESC(BGT3600),
+	.a_tvc			=1,
+	.v_cap			=1,
+	.a_cap			=1,
 
 	.xtal			= 54,
 	.i2c_rate		= SAA7231_I2C_RATE_100,
@@ -1179,7 +1350,7 @@ static struct saa7231_config purus_blackgold_bgt3620 = {
 
 	.stream_ports		= 2,
 };
-
+*/
 static struct saa7231_config purus_blackgold_bgt3595 = {
 
 	.desc			= DEVICE_DESC(BGT3595),
@@ -1199,7 +1370,7 @@ static struct saa7231_config purus_blackgold_bgt3595 = {
 
 	.stream_ports		= 2,
 };
-
+/*
 static struct saa7231_config purus_blackgold_bgt3585 = {
 
 	.desc			= DEVICE_DESC(BGT3585),
@@ -1257,6 +1428,7 @@ static struct saa7231_config purus_blackgold_bgt3575 = {
 	.frontend_attach	= saa7231_frontend_attach,
 	.stream_ports		= 2,
 };
+*/
 static struct saa7231_config purus_pcie_ref_config = {
 
 	.desc			= DEVICE_DESC(PURUS_PCIE),
@@ -1294,26 +1466,99 @@ static struct saa7231_config purus_mpcie_ref_config = {
 	.frontend_attach	= saa7231_frontend_attach,
 	.stream_ports		= 1,
 };
+/*
+static struct saa7231_config purus_blackgold_bgt3602 = {
+        .desc                   = DEVICE_DESC(BGT3602),
+	.a_tvc			=1,
+	.v_cap			=1,
+	.a_cap			=1,
+	
+        .xtal                   = 54,
+        .i2c_rate               = SAA7231_I2C_RATE_100,
+        .root_clk               = CLK_ROOT_54MHz,
+        .irq_handler            = saa7231_irq_handler,
+
+        .ext_dvb_adapters       = 2,
+        .ts0_cfg                = 0x41,
+        .ts0_clk                = 0x05,
+        .ts1_cfg                = 0x41,
+        .ts1_clk                = 0x05,
+        .frontend_enable        = saa7231_frontend_enable,
+        .frontend_attach        = saa7231_frontend_attach,
+
+        .stream_ports           = 2,
+};
+*/
+
+static struct saa7231_config hauppauge_hvr1280 = {
+        .desc                   = DEVICE_DESC(HVR1280),
+	.a_tvc			=1,
+	.v_cap			=1,
+	.a_cap			=1,
+	
+        .xtal                   = 54,
+        .i2c_rate               = SAA7231_I2C_RATE_100,
+        .root_clk               = CLK_ROOT_54MHz,
+        .irq_handler            = saa7231_irq_handler,
+
+        .ext_dvb_adapters       = 1,
+        .ts0_cfg                = 0x41,
+        .ts0_clk                = 0x05,
+//        .ts1_cfg                = 0x41,
+//        .ts1_clk                = 0x05,
+        .frontend_enable        = saa7231_frontend_enable,
+        .frontend_attach        = saa7231_frontend_attach,
+
+        .stream_ports           = 1,
+};
+
+static struct saa7231_config behold_t8 = {
+        .desc                   = DEVICE_DESC(BEHOLDT8),
+	.a_tvc			=1,
+	.v_cap			=1,
+	.a_cap			=1,
+	
+        .xtal                   = 54,
+        .i2c_rate               = SAA7231_I2C_RATE_400,
+        .root_clk               = CLK_ROOT_54MHz,
+        .irq_handler            = saa7231_irq_handler,
+
+        .ext_dvb_adapters       = 1,
+        .ts0_cfg                = 0x41,
+        .ts0_clk                = 0x05,
+//        .ts1_cfg                = 0x41,
+//        .ts1_clk                = 0x05,
+        .frontend_enable        = saa7231_frontend_enable,
+        .frontend_attach        = saa7231_frontend_attach,
+
+        .stream_ports           = 1,
+};
+
 
 static struct pci_device_id saa7231_pci_table[] = {
 
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3575, SAA7231, &purus_blackgold_bgt3575),
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3576, SAA7231, &purus_blackgold_bgt3576),
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3585, SAA7231, &purus_blackgold_bgt3585),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3575, SAA7231, &purus_blackgold_bgt3575),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3576, SAA7231, &purus_blackgold_bgt3576),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3585, SAA7231, &purus_blackgold_bgt3585),
 	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3595, SAA7231, &purus_blackgold_bgt3595),
 
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3600, SAA7231, &purus_blackgold_bgt3600),
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3620, SAA7231, &purus_blackgold_bgt3620),
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3630, SAA7231, &purus_blackgold_bgt3630),
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3650, SAA7231, &purus_blackgold_bgt3650),
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3651, SAA7231, &purus_blackgold_bgt3651),
-	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3636, SAA7231, &purus_blackgold_bgt3636),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3600, SAA7231, &purus_blackgold_bgt3600),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3620, SAA7231, &purus_blackgold_bgt3620),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3630, SAA7231, &purus_blackgold_bgt3630),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3650, SAA7231, &purus_blackgold_bgt3650),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3651, SAA7231, &purus_blackgold_bgt3651),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3636, SAA7231, &purus_blackgold_bgt3636),
+//	MAKE_ENTRY(BLACKGOLD_TECHNOLOGY, BLACKGOLD_BGT3602, SAA7231, &purus_blackgold_bgt3602),
 
-	MAKE_ENTRY(SUBVENDOR_ALL, SUBDEVICE_ALL, SAA7231, &purus_blackgold_bgt3576),
-	MAKE_ENTRY(SUBVENDOR_ALL, SUBDEVICE_ALL, SAA7231, &purus_blackgold_bgt3575),
+//	MAKE_ENTRY(SUBVENDOR_ALL, SUBDEVICE_ALL, SAA7231, &purus_blackgold_bgt3576),
+//	MAKE_ENTRY(SUBVENDOR_ALL, SUBDEVICE_ALL, SAA7231, &purus_blackgold_bgt3575),
 
-	MAKE_ENTRY(NXP_REFERENCE_BOARD, PURUS_mPCIe_REF, SAA7231, &purus_mpcie_ref_config),
+//	MAKE_ENTRY(NXP_REFERENCE_BOARD, PURUS_mPCIe_REF, SAA7231, &purus_mpcie_ref_config),
 	MAKE_ENTRY(NXP_REFERENCE_BOARD, PURUS_PCIe_REF, SAA7231, &purus_pcie_ref_config),
+
+	MAKE_ENTRY(HAUPPAUGE_DEVICE, HAUPPAUGE_HVR1280, SAA7231, &hauppauge_hvr1280),
+
+	MAKE_ENTRY(BEHOLD_DEVICE, BEHOLD_T8, SAA7231, &behold_t8),
 	{ }
 };
 MODULE_DEVICE_TABLE(pci, saa7231_pci_table);
diff --git a/linux/drivers/media/common/saa7231/saa7231_dtl.h b/linux/drivers/media/common/saa7231/saa7231_dtl.h
index 508bb62..a3cbca3 100644
--- a/linux/drivers/media/common/saa7231/saa7231_dtl.h
+++ b/linux/drivers/media/common/saa7231/saa7231_dtl.h
@@ -28,6 +28,7 @@
 #define BUFMASK(__x)				(__x << 26)
 #define DMAMASK(__port)				(DMACH(__port) << 21)
 #define PTA(__buf, __x)				(__buf[__x].offset)
+#define OFFSET(__dma_buf, __x)  (__dma_buf[__x].offset | DMAMASK(stream->port_id) | (__x << 26))
 
 #define DMAADDR(__tc, __port, __buf, __x)	(TCMASK(__tc) | BUFMASK(__x) | DMAMASK(__port) | PTA(__buf, __x))
 
diff --git a/linux/drivers/media/common/saa7231/saa7231_dvb.c b/linux/drivers/media/common/saa7231/saa7231_dvb.c
index 01a8bc0..244a43c 100644
--- a/linux/drivers/media/common/saa7231/saa7231_dvb.c
+++ b/linux/drivers/media/common/saa7231/saa7231_dvb.c
@@ -376,7 +376,7 @@ int saa7231_dvb_init(struct saa7231_dev *saa7231)
 
 	saa7231->adapters = BUILTIN_ADAPTERS + config->ext_dvb_adapters;
 
-	dprintk(SAA7231_INFO, 1, "INFO: Device supoort %d DVB adapters", saa7231->adapters);
+	dprintk(SAA7231_INFO, 1, "INFO: Device support %d DVB adapters", saa7231->adapters);   /* fix spelling mistake*/ 
 	dvb = kzalloc((sizeof (struct saa7231_dvb) * saa7231->adapters), GFP_KERNEL);
 	if (!dvb) {
 		dprintk(SAA7231_ERROR, 1, "ERROR: Allocating %d DVB Adapters", saa7231->adapters);
diff --git a/linux/drivers/media/common/saa7231/saa7231_i2c.c b/linux/drivers/media/common/saa7231/saa7231_i2c.c
index 03dcaaf..e870a1a 100644
--- a/linux/drivers/media/common/saa7231/saa7231_i2c.c
+++ b/linux/drivers/media/common/saa7231/saa7231_i2c.c
@@ -404,7 +404,7 @@ exit:
 }
 EXPORT_SYMBOL_GPL(saa7231_i2c_init);
 
-int saa7231_i2c_exit(struct saa7231_dev *saa7231)
+void saa7231_i2c_exit(struct saa7231_dev *saa7231)
 {
 	struct saa7231_i2c *i2c		= saa7231->i2c;
 	struct i2c_adapter *adapter	= NULL;
@@ -425,6 +425,6 @@ int saa7231_i2c_exit(struct saa7231_dev *saa7231)
 	i2c = saa7231->i2c;
 	kfree(i2c);
 	mutex_unlock(&saa7231->dev_lock);
-	return 0;
+	return;
 }
 EXPORT_SYMBOL_GPL(saa7231_i2c_exit);
diff --git a/linux/drivers/media/common/saa7231/saa7231_i2c.h b/linux/drivers/media/common/saa7231/saa7231_i2c.h
index d40013f..ca5973e 100644
--- a/linux/drivers/media/common/saa7231/saa7231_i2c.h
+++ b/linux/drivers/media/common/saa7231/saa7231_i2c.h
@@ -33,6 +33,6 @@ struct saa7231_i2c {
 };
 
 extern int saa7231_i2c_init(struct saa7231_dev *saa7231);
-extern int saa7231_i2c_exit(struct saa7231_dev *saa7231);
+extern void saa7231_i2c_exit(struct saa7231_dev *saa7231);
 
 #endif /* __SAA7231_H */
diff --git a/linux/drivers/media/common/saa7231/saa7231_pci.c b/linux/drivers/media/common/saa7231/saa7231_pci.c
index 733a6be..cd36e36 100644
--- a/linux/drivers/media/common/saa7231/saa7231_pci.c
+++ b/linux/drivers/media/common/saa7231/saa7231_pci.c
@@ -18,6 +18,8 @@
  *	Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
  */
 #include <asm/io.h>
+#include <asm/atomic.h>
+#include <linux/spinlock_types.h>
 #include <asm/pgtable.h>
 #include <asm/page.h>
 #include <linux/module.h>
diff --git a/linux/drivers/media/common/saa7231/saa7231_stream.c b/linux/drivers/media/common/saa7231/saa7231_stream.c
index 28781fa..f10daf5 100644
--- a/linux/drivers/media/common/saa7231/saa7231_stream.c
+++ b/linux/drivers/media/common/saa7231/saa7231_stream.c
@@ -34,7 +34,7 @@
 #include "saa7231_ts2dtl.h"
 //#include "saa7231_dif.h"
 //#include "saa7231_vs2dtl.h"
-//#include "saa7231_xs2dtl.h"
+#include "saa7231_xs2dtl.h"
 //#include "saa7231_avis_vid.h"
 
 
@@ -45,7 +45,7 @@ struct saa7231_stream *saa7231_stream_init(struct saa7231_dev *saa7231,
 					   int count,
 					   int pages)
 {
-//	struct saa7231_config *config = saa7231->config;
+	struct saa7231_config *config = saa7231->config;
 	struct saa7231_stream *stream;
 	struct saa7231_dtl *dtl;
 	int ret;
@@ -69,7 +69,7 @@ struct saa7231_stream *saa7231_stream_init(struct saa7231_dev *saa7231,
 			dprintk(SAA7231_ERROR, 1, "ERROR: Invalid Stream port, port=%d", count);
 			return NULL;
 		}
-#if 0
+#if 1
 		switch (adap_type) {
 		case ADAPTER_INT:
 			stream->port_id	= STREAM_PORT_AS2D_LOCAL;
@@ -138,7 +138,7 @@ struct saa7231_stream *saa7231_stream_init(struct saa7231_dev *saa7231,
 			dtl->module	= DS2D_ITU;
 			break;
 		}
-#if 0
+#if 1
 		ret = saa7231_xs2dtl_init(stream, pages);
 		if (ret) {
 			dprintk(SAA7231_ERROR, 1, "ERROR: XS2DTL engine initialization failed");
